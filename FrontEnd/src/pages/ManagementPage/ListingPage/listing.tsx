import React, { useEffect, useRef, useState } from 'react';
import "./listing.css";
import { Select, Input } from 'antd';
import L from 'leaflet';
import 'leaflet/dist/leaflet.css';
import TextArea from 'antd/es/input/TextArea';
import { Checkbox, Col, Row } from 'antd';
import Image from "../../../assets/img/upload-image.png"
import Video from "../../../assets/img/upload-video.png"
import { Button } from 'antd';
import { ArrowRightOutlined } from '@ant-design/icons';

interface UploadedImage {
    id: string;
    file: File;
    url: string;
}

const { Option } = Select;

const Listing = () => {
    const mapRef = useRef<HTMLDivElement | null>(null);
    const mapInstanceRef = useRef<L.Map | null>(null);

    const fileInputRef = useRef<HTMLInputElement>(null);
    const [images, setImages] = useState<UploadedImage[]>([]);
    const [isUploading, setIsUploading] = useState(false);

    const videoInputRef = useRef<HTMLInputElement | null>(null);
    const [video, setVideo] = useState<{ file: File; url: string } | null>(null);
    const [isUploadingVideo, setIsUploadingVideo] = useState(false);

    const handleSelectVideo = (e: React.ChangeEvent<HTMLInputElement>) => {
        const file = e.target.files?.[0];
        if (!file) return;

        // Gi·ªõi h·∫°n dung l∆∞·ª£ng n·∫øu c·∫ßn
        if (file.size > 50 * 1024 * 1024) { // 50MB
            alert("Video qu√° l·ªõn. Vui l√≤ng ch·ªçn video d∆∞·ªõi 50MB.");
            return;
        }

        const url = URL.createObjectURL(file);
        setVideo({ file, url });
        setIsUploadingVideo(false);
    };



    const handleSelectImages = (e: React.ChangeEvent<HTMLInputElement>) => {
        const files = Array.from(e.target.files || []);
        const fileURLs: UploadedImage[] = files.map((file) => ({
            id: Math.random().toString(36).substr(2, 9),
            file,
            url: URL.createObjectURL(file),
        }));

        // ‚úÖ Gi·ªõi h·∫°n 20 ·∫£nh
        if (images.length + fileURLs.length > 20) {
            alert("B·∫°n ch·ªâ ƒë∆∞·ª£c t·∫£i t·ªëi ƒëa 20 ·∫£nh!");
            return;
        }

        setImages((prev) => [...prev, ...fileURLs]);
        setIsUploading(false);
    };

    const handleRemove = (id: string) => {
        setImages((prev) => prev.filter((img) => img.id !== id));
    };



    useEffect(() => {
        if (!mapRef.current || mapInstanceRef.current) return;

        // üéØ T·ªça ƒë·ªô ƒê√† N·∫µng
        const danangLatLng: [number, number] = [16.047079, 108.206230];

        const map = L.map(mapRef.current).setView(danangLatLng, 13);
        mapInstanceRef.current = map;

        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a>',
        }).addTo(map);

        const marker = L.marker(danangLatLng).addTo(map);

        map.on('click', function (e) {
            const { lat, lng } = e.latlng;
            marker.setLatLng([lat, lng]);
            console.log("T·ªça ƒë·ªô ƒë∆∞·ª£c ch·ªçn:", lat, lng);
        });
    }, []);


    return (
        <div className="container-listing">
            <div className="category-listing">
                <div className="title-listing">Lo·∫°i chuy√™n m·ª•c</div>
                <div className="form-group-listing">
                    <label className="label" htmlFor="category">
                        Lo·∫°i chuy√™n m·ª•c <span className="required">(*)</span>
                    </label>
                    <Select
                        className="select-listing"
                        placeholder="-- Ch·ªçn lo·∫°i chuy√™n m·ª•c --"
                        style={{ width: '50%' }}
                        size="large"
                        allowClear
                    >
                        <Option value="nha-dat">Nh√† ƒë·∫•t</Option>
                        <Option value="can-ho">CƒÉn h·ªô</Option>
                        <Option value="van-phong">VƒÉn ph√≤ng</Option>
                    </Select>
                </div>
            </div>

            <div className="area-listing">
                <div className="title-listing">Khu v·ª±c</div>

                <div className="area-select">
                    <div className="area-left">
                        <div className="form-group-listing">
                            <label className="label" htmlFor="category">
                                T·ªânh/Th√†nh ph·ªë <span className="required">(*)</span>
                            </label>
                            <Select
                                className="select-listing"
                                placeholder="-- Ch·ªçn t·ªânh/th√†nh ph·ªë --"
                                size="large"
                                allowClear
                            >
                                <Option value="nha-dat">Nh√† ƒë·∫•t</Option>
                                <Option value="can-ho">CƒÉn h·ªô</Option>
                                <Option value="van-phong">VƒÉn ph√≤ng</Option>
                            </Select>
                        </div>

                        <div className="form-group-listing">
                            <label className="label" htmlFor="category">
                                Ph∆∞·ªùng/X√£
                            </label>
                            <Select
                                className="select-listing"
                                placeholder="-- Ch·ªçn ph∆∞·ªùng/x√£ --"
                                size="large"
                                allowClear
                            >
                                <Option value="nha-dat">Nh√† ƒë·∫•t</Option>
                                <Option value="can-ho">CƒÉn h·ªô</Option>
                                <Option value="van-phong">VƒÉn ph√≤ng</Option>
                            </Select>
                        </div>

                        <div className="form-group-listing">
                            <label className="label" htmlFor="category">
                                S·ªë nh√†
                            </label>
                            <Input
                                className='input-height'
                                placeholder="Nh·∫≠p s·ªë nh√†"
                            />
                        </div>
                    </div>

                    <div className="area-right">
                        <div className="form-group-listing">
                            <label className="label" htmlFor="category">
                                Qu·∫≠n/Huy·ªán <span className="required">(*)</span>
                            </label>
                            <Select
                                className="select-listing"
                                placeholder="-- Ch·ªçn lo·∫°i chuy√™n m·ª•c --"
                                size="large"
                                allowClear
                            >
                                <Option value="nha-dat">Nh√† ƒë·∫•t</Option>
                                <Option value="can-ho">CƒÉn h·ªô</Option>
                                <Option value="van-phong">VƒÉn ph√≤ng</Option>
                            </Select>
                        </div>

                        <div className="form-group-listing">
                            <label className="label" htmlFor="category">
                                ƒê∆∞·ªùng/Ph·ªë
                            </label>
                            <Select
                                className="select-listing"
                                placeholder="-- Ch·ªçn lo·∫°i chuy√™n m·ª•c --"
                                size="large"
                                allowClear
                            >
                                <Option value="nha-dat">Nh√† ƒë·∫•t</Option>
                                <Option value="can-ho">CƒÉn h·ªô</Option>
                                <Option value="van-phong">VƒÉn ph√≤ng</Option>
                            </Select>
                        </div>


                        <div className="form-group-listing">
                            <label className="label" htmlFor="category">
                                ƒê·ªãa ch·ªâ c·ª• th·ªÉ
                            </label>
                            <Input
                                placeholder="ƒê·ªãa ch·ªâ"
                                className='input-height'
                                value=""
                                readOnly
                                style={{ backgroundColor: '#f5f5f5' }}
                            />
                        </div>
                    </div>
                </div>
            </div>

            <div className="map-listing">
                <div className="title-listing">B·∫£n ƒë·ªì</div>
                <div ref={mapRef} id="map" style={{ height: "400px", width: "100%" }}></div>
            </div>

            <div className="detail-listing">
                <div className="title-listing">Th√¥ng tin m√¥ t·∫£</div>
                <div className="form-group-listing">
                    <label className="label" htmlFor="category">
                        Ti√™u ƒë·ªÅ <span className="required">(*)</span>
                    </label>
                    <TextArea rows={2} />
                </div>
                <div className="form-group-listing gap">
                    <label className="label" htmlFor="category">
                        N·ªôi dung m√¥ t·∫£ <span className="required">(*)</span>
                    </label>
                    <TextArea rows={10} />
                </div>
                <div className="form-group-listing gap">
                    <label className="label" htmlFor="category">
                        Gi√° cho thu√™ <span className="required">(*)</span>
                    </label>
                    <Input
                        className='input-height input-width'
                        placeholder="Nh·∫≠p gi√° thu√™"
                    />
                    <span className='listing-span'>Nh·∫≠p ƒë·∫ßy ƒë·ªß s·ªë, v√≠ d·ª• 1 tri·ªáu th√¨ nh·∫≠p l√† 1000000</span>
                </div>
                <div className="form-group-listing gap">
                    <label className="label" htmlFor="category">
                        Di·ªán t√≠ch <span className="required">(*)</span>
                    </label>
                    <Input
                        className='input-height input-width'
                        placeholder="Nh·∫≠p di·ªán t√≠ch"
                    />
                    <span className='listing-span'>ƒê∆°n v·ªã t√≠nh: m<sup>2</sup></span>
                </div>
            </div>

            <div className="features-listing">
                <div className="title-listing">ƒêi·ªÉm n·ªïi b·∫≠t</div>
                <Checkbox.Group style={{ width: '100%' }}>
                    <Row>
                        <Col span={8}>
                            <Checkbox value="A">ƒê·∫ßy ƒë·ªß n·ªôi th·∫•t</Checkbox>
                        </Col>
                        <Col span={8}>
                            <Checkbox value="B">C√≥ m√°y l·∫°nh</Checkbox>
                        </Col>
                        <Col span={8}>
                            <Checkbox value="C">C√≥ thang m√°y</Checkbox>
                        </Col>
                        <Col span={8}>
                            <Checkbox value="D">C√≥ b·∫£o v·ªá 24/24</Checkbox>
                        </Col>
                        <Col span={8}>
                            <Checkbox value="E">C√≥ m√°y gi·∫∑t</Checkbox>
                        </Col>
                        <Col span={8}>
                            <Checkbox value="E">Kh√¥ng chung ch·ªß</Checkbox>
                        </Col>
                        <Col span={8}>
                            <Checkbox value="E">C√≥ h·∫ßm ƒë·ªÉ xe</Checkbox>
                        </Col>
                        <Col span={8}>
                            <Checkbox value="E">C√≥ k·ªá b·∫øp</Checkbox>
                        </Col>
                        <Col span={8}>
                            <Checkbox value="E">C√≥ t·ªß l·∫°nh</Checkbox>
                        </Col>
                        <Col span={8}>
                            <Checkbox value="E">Gi·ªù gi·∫•c t·ª± do</Checkbox>
                        </Col>
                        <Col span={8}>
                            <Checkbox value="E">C√≥ ban c√¥ng</Checkbox>
                        </Col>
                    </Row>
                </Checkbox.Group>
            </div>

            <div className="img-listing">
                <div className="title-listing">H√¨nh ·∫£nh</div>

                {/* Khu v·ª±c upload ·∫£nh */}
                <div className="browse_photos" onClick={() => fileInputRef.current?.click()}>
                    <div className="upload-image">
                        <img className="icon-upload-image" src={Image} alt="upload icon" />
                        <span className="upload-text">{isUploading ? 'ƒêang ƒëƒÉng h√¨nh...' : 'T·∫£i ·∫£nh t·ª´ thi·∫øt b·ªã'}</span>
                    </div>
                    <input
                        type="file"
                        ref={fileInputRef}
                        onChange={handleSelectImages}
                        multiple
                        accept="image/*"
                        style={{ display: 'none' }}
                    />
                </div>

                {/* Ghi ch√∫ upload */}
                <div className="note-span">
                    <span className="listing-span">‚Ä¢ T·∫£i l√™n t·ªëi ƒëa 20 ·∫£nh trong m·ªôt b√†i ƒëƒÉng</span>
                    <span className="listing-span">‚Ä¢ Dung l∆∞·ª£ng ·∫£nh t·ªëi ƒëa 10MB</span>
                    <span className="listing-span">‚Ä¢ H√¨nh ·∫£nh ph·∫£i li√™n quan ƒë·∫øn ph√≤ng tr·ªç, nh√† cho thu√™</span>
                    <span className="listing-span">‚Ä¢ Kh√¥ng ch√®n vƒÉn b·∫£n, s·ªë ƒëi·ªán tho·∫°i l√™n ·∫£nh</span>
                </div>

                {/* Danh s√°ch ·∫£nh ƒë√£ ch·ªçn */}
                <div className="image-grid">
                    {images.map((img) => (
                        <div key={img.id} className="image-card">
                            <img src={img.url} alt="preview" />
                            <button onClick={() => handleRemove(img.id)} className="delete-btn">üóëÔ∏è X√≥a</button>
                        </div>
                    ))}
                </div>
            </div>

            <div className="video-listing">
                <div className="title-listing">Video</div>

                <div className="browse_photos" onClick={() => videoInputRef.current?.click()}>
                    <div className="upload-image">
                        <img className="icon-upload-image" src={Video} alt="upload icon" />
                        <span className="upload-text">
                            {isUploadingVideo ? "ƒêang ƒëƒÉng video..." : video ? "Thay ƒë·ªïi video" : "T·∫£i video t·ª´ thi·∫øt b·ªã"}
                        </span>
                    </div>
                    <input
                        type="file"
                        ref={videoInputRef}
                        onChange={handleSelectVideo}
                        accept="video/*"
                        style={{ display: "none" }}
                    />
                </div>

                {video && (
                    <div className="video-preview">
                        <video controls width="100%" src={video.url} />
                        <button onClick={() => setVideo(null)} className="delete-btn">üóëÔ∏è X√≥a video</button>
                    </div>
                )}
            </div>

            <div className="contact-listing">
                <div className="title-listing">Th√¥ng tin li√™n h·ªá</div>
                <div className="contact-flex">
                    <div className="form-group-listing">
                        <label className="label" htmlFor="category">
                            H·ªç T√™n
                        </label>
                        <Input
                            className='input-height'
                            placeholder="Nguy·ªÖn ƒê·ª©c Th·∫Øng"
                            value="Nguy·ªÖn ƒê·ª©c Th·∫Øng"
                            readOnly
                            onChange={() => { }}
                        />
                    </div>
                    <div className="form-group-listing">
                        <label className="label" htmlFor="category">
                            S·ªë ƒëi·ªán tho·∫°i
                        </label>
                        <Input
                            className="input-height"
                            placeholder="0325043590"
                            value="0325043590"
                            readOnly
                            onChange={() => { }}
                        />
                    </div>
                </div>
            </div>

            <div className="button-listing">
                <Button
                    type="primary"
                    className="continue-btn"
                    icon={<ArrowRightOutlined />}
                    iconPosition="end"
                    block
                >
                    Ti·∫øp t·ª•c
                </Button>
            </div>
        </div>
    )
}

export default Listing